/*
描述
有一个由按钮组成的矩阵，其中每行有6个按钮，共5行。每个按钮的位置上有一盏灯。当按下一个按钮后，该按钮以及周围位置(上边、下边、左边、右边)的灯都会改变一次。即，如果灯原来是点亮的，就会被熄灭；如果灯原来是熄灭的，则会被点亮。在矩阵角上的按钮改变3盏灯的状态；在矩阵边上的按钮改变4盏灯的状态；其他的按钮改变5盏灯的状态。

在上图中，左边矩阵中用X标记的按钮表示被按下，右边的矩阵表示灯状态的改变。对矩阵中的每盏灯设置一个初始状态。请你按按钮，直至每一盏等都熄灭。与一盏灯毗邻的多个按钮被按下时，一个操作会抵消另一次操作的结果。在下图中，第2行第3、5列的按钮都被按下，因此第2行、第4列的灯的状态就不改变。

请你写一个程序，确定需要按下哪些按钮，恰好使得所有的灯都熄灭。根据上面的规则，我们知道1）第2次按下同一个按钮时，将抵消第1次按下时所产生的结果。因此，每个按钮最多只需要按下一次；2）各个按钮被按下的顺序对最终的结果没有影响；3）对第1行中每盏点亮的灯，按下第2行对应的按钮，就可以熄灭第1行的全部灯。如此重复下去，可以熄灭第1、2、3、4行的全部灯。同样，按下第1、2、3、4、5列的按钮，可以熄灭前5列的灯。



输入
5行组成，每一行包括6个数字（0或1）。相邻两个数字之间用单个空格隔开。0表示灯的初始状态是熄灭的，1表示灯的初始状态是点亮的。
输出
5行组成，每一行包括6个数字（0或1）。相邻两个数字之间用单个空格隔开。其中的1表示需要把对应的按钮按下，0则表示不需要按对应的按钮。
*/
#include <iostream>
#include<stdio.h>
using namespace std;
/*以数组来表示灯矩阵的状态，对矩阵中的每一盏灯设初始状态
第一行是正整数N，代表案例数，矩阵为5×6，0代表熄灭，1代表点亮
输出：案例序号，接着输出操作矩阵，0代表按下，1代表不需要操作
*/
/*解题思路：灯的初始状态确定后，相应的对于第一行的灯有可行的操作，对于每一个操作状态
推倒之后的行中可能使灯全部熄灭的操作
初始化一个6×8数组
核心部分在于怎么更新操作状态矩阵的值
*/
int puzzle[6][8], press[6][8];
bool guess(){
    for(int i=1;i<5;i++){
        for(int j=1;j<7;j++)
            press[i+1][j]=(puzzle[i][j]+press[i][j]+press[i-1][j]+press[i][j-1]+press[i][j+1])%2;
    }
    for(int i=1;i<7;i++){
        if((press[5][i-1]+press[5][i]+press[5][i+1]+press[4][i]%2) != puzzle[5][i])
            return(false);
    }
    return(true);
}
void enumerate(){
    bool success;
    int c;
    for(int i=1;i<7;i++){
        press[1][i]=0;
    }
    while(guess()==false){
        press[1][1]++;
        c=1;
        while(press[1][c]>1){
            press[1][c]=0;
            c++;
            press[1][c]++;
        }
    }
    return;
}
int main()
{
    //输入模块
    int N=0;
    int r,c;
    cin>>N;
    for(r=0;r<6;r++){
        press[r][0]=press[r][7]=0;
    }
    for(r=1;r<7;r++){
        press[0][c]=0;
    }
    for(int i;i<N;i++){
        for(r=1;r<6;r++){
            for(c=1;c<7;c++){
                cin>>puzzle[r][c];
            }
        }
    enumerate();
    cout<<"PUZZLE#"<<i+1<<endl;
    for(r=1;r<6;r++){
        for(c=1;c=7;c++){
            cout<<press[r][c]<<" ";
        }
        cout<<endl;
    }
    }
    return 0;
}
